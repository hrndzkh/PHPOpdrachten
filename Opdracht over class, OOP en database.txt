1. Een functie is een stuk code dat een specifieke taak uitvoert. Terwijl een class een verzameling van variabelen en methodes, en kan dus ook funties bevatten.

2. Object-Oriented Programming is een programmeermethode op basis van objecten, die georganiseerd zijn in klassen, in plaats van alleen functies.

3. Mijn telefoon heeft een aantal eigenschappen. Twee daarvan zijn de kleur en de lengte. De methode zou dan zijn:
function get_kleur() {
		return $this->kleur;
	}
	
function get_lengte() {
		return $this->lengte;
	}
Hieronder de hele code:
class telefoon {
	public $kleur;
	public $lengte;

	function __construct($kleur, $lengte) {
		$this->kleur = $kleur;
		$this->lengte = $lengte;
	}

	function get_kleur() {
		return $this->kleur;
	}

	function get_lengte() {
		return $this->lengte;
	}

}

$iPhone = new telefoon("Middernachtgroen", "158 mm");

echo $iPhone->get_kleur() . "<br>";
echo $iPhone->get_lengte();


4.
Properties: username, hostname, password, databasename

<?php

define("DB_HOST", "localhost");
define("DB_USER", "root");
define("DB_PASS", "");

define("DB_NAME", "php");

class DB{
	protected $dbh;
	protected $stmt;
    protected $resultSet;

	public function __construct(){
		$this->dbh = new PDO("mysql:host=".DB_HOST.";dbname=".DB_NAME, DB_USER, DB_PASS);
        $this->resultSet = [];
	}

	public function executeSQL($query){
        $this->stmt = $this->dbh->prepare($query);
		$result = $this->stmt->execute();

		if (!$result) {
    		die('<pre>Oops, Error execute query '. $query .'</pre><br><pre>'.'Result code: '. $result .'</pre>');
   		}	
		
		$row = $this->stmt->fetchAll();
		
		if(!empty($row)){
			$this->resultSet = $row;
			return $this->resultSet;
		}

		return $this->resultSet;
	}
}

?>